% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sdf_lag.R
\name{sdf_lag}
\alias{sdf_lag}
\title{Calculate lag}
\value{
A \code{data.frame}.
}
\description{
Calculate lag
}
\section{Usage}{

\preformatted{
  p <- sdf_lag$new(sc, data)
  p$lag(
    data = NULL, partition_cols, order_cols, target_col, lag_num
  )
}
}

\section{Arguments}{

\describe{
  \item{p}{An \code{sdf_melt} object.}
  \item{sc}{A \code{spark_connection}.}
  \item{data}{The Spark \code{DataFrame} on which to perform the function.}
  \item{partition_cols}{list(string). List of column(s) to partition on.}
  \item{order_cols}{list(string). List of column(s) to order on.}
  \item{target_col}{list(string). Column name to create a window over.}
  \item{lag_num}{Integer. The number of rows back from the current row from
    which to obtain a value.}
}
}

\section{Details}{

\code{$new()} instantiates the class.

\code{$lag()} calls the lag function.
}

\examples{
# Set up a spark connection
sc <- sparklyr::spark_connect(master = "local", version = "2.1.0")

# Extract some data
lag_data <- sparklyr::spark_read_json(
  sc,
  "lag_data",
  path = system.file(
    "data_raw/lag_data.json",
    package = "sparkts"
  )
) \%>\%
  sparklyr::spark_dataframe()

# Instantiate the class
p <- sdf_lag$new(sc = sc, data = lag_data)

# Calculate the lag
p$lag(
  partition_cols = list("id"),
  order_cols = list("t"),
  target_col = "v",
  lag_num = 2L
)

sparklyr::spark_disconnect(sc = sc)

}
