% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/spark_lag.R
\name{spark_lag}
\alias{spark_lag}
\title{Calculate lag}
\usage{
spark_lag(sc, data, partition_cols, order_cols, target_col, lag_num)
}
\arguments{
\item{sc}{A \code{spark_connection}.}

\item{data}{The Spark \code{DataFrame} on which to perform the function.}

\item{partition_cols}{list(string): List of column(s) to partition on}

\item{order_cols}{list(string): List of column(s) to order on}

\item{target_col}{list(string): Column name to create a window over}

\item{lag_num}{Integer: The number of rows back from the current row from
which to obtain a value}
}
\value{
\code{sql.DataFrame}: The DataFrame returned
}
\description{
Calculate lag
}
\examples{
# Set up a spark connection
sc <- sparklyr::spark_connect(master = "local", version = "2.1.0")

# Extract some data
lag_data <- sparklyr::spark_read_json(
  sc,
  "std_data",
  path = system.file(
    "data_raw/lag_data.json",
    package = "testsml"
  )
) \%>\%
  sparklyr::spark_dataframe()

# Calculate the lag
output <- spark_lag(
  sc,
  data = lag_data,
  partition_cols = "id",
  order_cols = "t",
  target_col = "v",
  lag_num = 2L
)

# Extract the standard error column
output <- output \%>\% dplyr::collect()
output

sparklyr::spark_disconnect(sc = sc)

}
